; This file was auto-generated by lbstanza-wrapper
; Version 0.1.0
; Manual editing would be unwise
defpackage z3/Enums/Z3_decl_kind :
  import core

public deftype Z3_decl_kind
public deftype Z3_OP_TRUE <: Z3_decl_kind
public deftype Z3_OP_FALSE <: Z3_decl_kind
public deftype Z3_OP_EQ <: Z3_decl_kind
public deftype Z3_OP_DISTINCT <: Z3_decl_kind
public deftype Z3_OP_ITE <: Z3_decl_kind
public deftype Z3_OP_AND <: Z3_decl_kind
public deftype Z3_OP_OR <: Z3_decl_kind
public deftype Z3_OP_IFF <: Z3_decl_kind
public deftype Z3_OP_XOR <: Z3_decl_kind
public deftype Z3_OP_NOT <: Z3_decl_kind
public deftype Z3_OP_IMPLIES <: Z3_decl_kind
public deftype Z3_OP_OEQ <: Z3_decl_kind
public deftype Z3_OP_ANUM <: Z3_decl_kind
public deftype Z3_OP_AGNUM <: Z3_decl_kind
public deftype Z3_OP_LE <: Z3_decl_kind
public deftype Z3_OP_GE <: Z3_decl_kind
public deftype Z3_OP_LT <: Z3_decl_kind
public deftype Z3_OP_GT <: Z3_decl_kind
public deftype Z3_OP_ADD <: Z3_decl_kind
public deftype Z3_OP_SUB <: Z3_decl_kind
public deftype Z3_OP_UMINUS <: Z3_decl_kind
public deftype Z3_OP_MUL <: Z3_decl_kind
public deftype Z3_OP_DIV <: Z3_decl_kind
public deftype Z3_OP_IDIV <: Z3_decl_kind
public deftype Z3_OP_REM <: Z3_decl_kind
public deftype Z3_OP_MOD <: Z3_decl_kind
public deftype Z3_OP_TO_REAL <: Z3_decl_kind
public deftype Z3_OP_TO_INT <: Z3_decl_kind
public deftype Z3_OP_IS_INT <: Z3_decl_kind
public deftype Z3_OP_POWER <: Z3_decl_kind
public deftype Z3_OP_STORE <: Z3_decl_kind
public deftype Z3_OP_SELECT <: Z3_decl_kind
public deftype Z3_OP_CONST_ARRAY <: Z3_decl_kind
public deftype Z3_OP_ARRAY_MAP <: Z3_decl_kind
public deftype Z3_OP_ARRAY_DEFAULT <: Z3_decl_kind
public deftype Z3_OP_SET_UNION <: Z3_decl_kind
public deftype Z3_OP_SET_INTERSECT <: Z3_decl_kind
public deftype Z3_OP_SET_DIFFERENCE <: Z3_decl_kind
public deftype Z3_OP_SET_COMPLEMENT <: Z3_decl_kind
public deftype Z3_OP_SET_SUBSET <: Z3_decl_kind
public deftype Z3_OP_AS_ARRAY <: Z3_decl_kind
public deftype Z3_OP_ARRAY_EXT <: Z3_decl_kind
public deftype Z3_OP_SET_HAS_SIZE <: Z3_decl_kind
public deftype Z3_OP_SET_CARD <: Z3_decl_kind
public deftype Z3_OP_BNUM <: Z3_decl_kind
public deftype Z3_OP_BIT1 <: Z3_decl_kind
public deftype Z3_OP_BIT0 <: Z3_decl_kind
public deftype Z3_OP_BNEG <: Z3_decl_kind
public deftype Z3_OP_BADD <: Z3_decl_kind
public deftype Z3_OP_BSUB <: Z3_decl_kind
public deftype Z3_OP_BMUL <: Z3_decl_kind
public deftype Z3_OP_BSDIV <: Z3_decl_kind
public deftype Z3_OP_BUDIV <: Z3_decl_kind
public deftype Z3_OP_BSREM <: Z3_decl_kind
public deftype Z3_OP_BUREM <: Z3_decl_kind
public deftype Z3_OP_BSMOD <: Z3_decl_kind
public deftype Z3_OP_BSDIV0 <: Z3_decl_kind
public deftype Z3_OP_BUDIV0 <: Z3_decl_kind
public deftype Z3_OP_BSREM0 <: Z3_decl_kind
public deftype Z3_OP_BUREM0 <: Z3_decl_kind
public deftype Z3_OP_BSMOD0 <: Z3_decl_kind
public deftype Z3_OP_ULEQ <: Z3_decl_kind
public deftype Z3_OP_SLEQ <: Z3_decl_kind
public deftype Z3_OP_UGEQ <: Z3_decl_kind
public deftype Z3_OP_SGEQ <: Z3_decl_kind
public deftype Z3_OP_ULT <: Z3_decl_kind
public deftype Z3_OP_SLT <: Z3_decl_kind
public deftype Z3_OP_UGT <: Z3_decl_kind
public deftype Z3_OP_SGT <: Z3_decl_kind
public deftype Z3_OP_BAND <: Z3_decl_kind
public deftype Z3_OP_BOR <: Z3_decl_kind
public deftype Z3_OP_BNOT <: Z3_decl_kind
public deftype Z3_OP_BXOR <: Z3_decl_kind
public deftype Z3_OP_BNAND <: Z3_decl_kind
public deftype Z3_OP_BNOR <: Z3_decl_kind
public deftype Z3_OP_BXNOR <: Z3_decl_kind
public deftype Z3_OP_CONCAT <: Z3_decl_kind
public deftype Z3_OP_SIGN_EXT <: Z3_decl_kind
public deftype Z3_OP_ZERO_EXT <: Z3_decl_kind
public deftype Z3_OP_EXTRACT <: Z3_decl_kind
public deftype Z3_OP_REPEAT <: Z3_decl_kind
public deftype Z3_OP_BREDOR <: Z3_decl_kind
public deftype Z3_OP_BREDAND <: Z3_decl_kind
public deftype Z3_OP_BCOMP <: Z3_decl_kind
public deftype Z3_OP_BSHL <: Z3_decl_kind
public deftype Z3_OP_BLSHR <: Z3_decl_kind
public deftype Z3_OP_BASHR <: Z3_decl_kind
public deftype Z3_OP_ROTATE_LEFT <: Z3_decl_kind
public deftype Z3_OP_ROTATE_RIGHT <: Z3_decl_kind
public deftype Z3_OP_EXT_ROTATE_LEFT <: Z3_decl_kind
public deftype Z3_OP_EXT_ROTATE_RIGHT <: Z3_decl_kind
public deftype Z3_OP_BIT2BOOL <: Z3_decl_kind
public deftype Z3_OP_INT2BV <: Z3_decl_kind
public deftype Z3_OP_BV2INT <: Z3_decl_kind
public deftype Z3_OP_CARRY <: Z3_decl_kind
public deftype Z3_OP_XOR3 <: Z3_decl_kind
public deftype Z3_OP_BSMUL_NO_OVFL <: Z3_decl_kind
public deftype Z3_OP_BUMUL_NO_OVFL <: Z3_decl_kind
public deftype Z3_OP_BSMUL_NO_UDFL <: Z3_decl_kind
public deftype Z3_OP_BSDIV_I <: Z3_decl_kind
public deftype Z3_OP_BUDIV_I <: Z3_decl_kind
public deftype Z3_OP_BSREM_I <: Z3_decl_kind
public deftype Z3_OP_BUREM_I <: Z3_decl_kind
public deftype Z3_OP_BSMOD_I <: Z3_decl_kind
public deftype Z3_OP_PR_UNDEF <: Z3_decl_kind
public deftype Z3_OP_PR_TRUE <: Z3_decl_kind
public deftype Z3_OP_PR_ASSERTED <: Z3_decl_kind
public deftype Z3_OP_PR_GOAL <: Z3_decl_kind
public deftype Z3_OP_PR_MODUS_PONENS <: Z3_decl_kind
public deftype Z3_OP_PR_REFLEXIVITY <: Z3_decl_kind
public deftype Z3_OP_PR_SYMMETRY <: Z3_decl_kind
public deftype Z3_OP_PR_TRANSITIVITY <: Z3_decl_kind
public deftype Z3_OP_PR_TRANSITIVITY_STAR <: Z3_decl_kind
public deftype Z3_OP_PR_MONOTONICITY <: Z3_decl_kind
public deftype Z3_OP_PR_QUANT_INTRO <: Z3_decl_kind
public deftype Z3_OP_PR_BIND <: Z3_decl_kind
public deftype Z3_OP_PR_DISTRIBUTIVITY <: Z3_decl_kind
public deftype Z3_OP_PR_AND_ELIM <: Z3_decl_kind
public deftype Z3_OP_PR_NOT_OR_ELIM <: Z3_decl_kind
public deftype Z3_OP_PR_REWRITE <: Z3_decl_kind
public deftype Z3_OP_PR_REWRITE_STAR <: Z3_decl_kind
public deftype Z3_OP_PR_PULL_QUANT <: Z3_decl_kind
public deftype Z3_OP_PR_PUSH_QUANT <: Z3_decl_kind
public deftype Z3_OP_PR_ELIM_UNUSED_VARS <: Z3_decl_kind
public deftype Z3_OP_PR_DER <: Z3_decl_kind
public deftype Z3_OP_PR_QUANT_INST <: Z3_decl_kind
public deftype Z3_OP_PR_HYPOTHESIS <: Z3_decl_kind
public deftype Z3_OP_PR_LEMMA <: Z3_decl_kind
public deftype Z3_OP_PR_UNIT_RESOLUTION <: Z3_decl_kind
public deftype Z3_OP_PR_IFF_TRUE <: Z3_decl_kind
public deftype Z3_OP_PR_IFF_FALSE <: Z3_decl_kind
public deftype Z3_OP_PR_COMMUTATIVITY <: Z3_decl_kind
public deftype Z3_OP_PR_DEF_AXIOM <: Z3_decl_kind
public deftype Z3_OP_PR_ASSUMPTION_ADD <: Z3_decl_kind
public deftype Z3_OP_PR_LEMMA_ADD <: Z3_decl_kind
public deftype Z3_OP_PR_REDUNDANT_DEL <: Z3_decl_kind
public deftype Z3_OP_PR_CLAUSE_TRAIL <: Z3_decl_kind
public deftype Z3_OP_PR_DEF_INTRO <: Z3_decl_kind
public deftype Z3_OP_PR_APPLY_DEF <: Z3_decl_kind
public deftype Z3_OP_PR_IFF_OEQ <: Z3_decl_kind
public deftype Z3_OP_PR_NNF_POS <: Z3_decl_kind
public deftype Z3_OP_PR_NNF_NEG <: Z3_decl_kind
public deftype Z3_OP_PR_SKOLEMIZE <: Z3_decl_kind
public deftype Z3_OP_PR_MODUS_PONENS_OEQ <: Z3_decl_kind
public deftype Z3_OP_PR_TH_LEMMA <: Z3_decl_kind
public deftype Z3_OP_PR_HYPER_RESOLVE <: Z3_decl_kind
public deftype Z3_OP_RA_STORE <: Z3_decl_kind
public deftype Z3_OP_RA_EMPTY <: Z3_decl_kind
public deftype Z3_OP_RA_IS_EMPTY <: Z3_decl_kind
public deftype Z3_OP_RA_JOIN <: Z3_decl_kind
public deftype Z3_OP_RA_UNION <: Z3_decl_kind
public deftype Z3_OP_RA_WIDEN <: Z3_decl_kind
public deftype Z3_OP_RA_PROJECT <: Z3_decl_kind
public deftype Z3_OP_RA_FILTER <: Z3_decl_kind
public deftype Z3_OP_RA_NEGATION_FILTER <: Z3_decl_kind
public deftype Z3_OP_RA_RENAME <: Z3_decl_kind
public deftype Z3_OP_RA_COMPLEMENT <: Z3_decl_kind
public deftype Z3_OP_RA_SELECT <: Z3_decl_kind
public deftype Z3_OP_RA_CLONE <: Z3_decl_kind
public deftype Z3_OP_FD_CONSTANT <: Z3_decl_kind
public deftype Z3_OP_FD_LT <: Z3_decl_kind
public deftype Z3_OP_SEQ_UNIT <: Z3_decl_kind
public deftype Z3_OP_SEQ_EMPTY <: Z3_decl_kind
public deftype Z3_OP_SEQ_CONCAT <: Z3_decl_kind
public deftype Z3_OP_SEQ_PREFIX <: Z3_decl_kind
public deftype Z3_OP_SEQ_SUFFIX <: Z3_decl_kind
public deftype Z3_OP_SEQ_CONTAINS <: Z3_decl_kind
public deftype Z3_OP_SEQ_EXTRACT <: Z3_decl_kind
public deftype Z3_OP_SEQ_REPLACE <: Z3_decl_kind
public deftype Z3_OP_SEQ_REPLACE_RE <: Z3_decl_kind
public deftype Z3_OP_SEQ_REPLACE_RE_ALL <: Z3_decl_kind
public deftype Z3_OP_SEQ_REPLACE_ALL <: Z3_decl_kind
public deftype Z3_OP_SEQ_AT <: Z3_decl_kind
public deftype Z3_OP_SEQ_NTH <: Z3_decl_kind
public deftype Z3_OP_SEQ_LENGTH <: Z3_decl_kind
public deftype Z3_OP_SEQ_INDEX <: Z3_decl_kind
public deftype Z3_OP_SEQ_LAST_INDEX <: Z3_decl_kind
public deftype Z3_OP_SEQ_TO_RE <: Z3_decl_kind
public deftype Z3_OP_SEQ_IN_RE <: Z3_decl_kind
public deftype Z3_OP_STR_TO_INT <: Z3_decl_kind
public deftype Z3_OP_INT_TO_STR <: Z3_decl_kind
public deftype Z3_OP_UBV_TO_STR <: Z3_decl_kind
public deftype Z3_OP_SBV_TO_STR <: Z3_decl_kind
public deftype Z3_OP_STR_TO_CODE <: Z3_decl_kind
public deftype Z3_OP_STR_FROM_CODE <: Z3_decl_kind
public deftype Z3_OP_STRING_LT <: Z3_decl_kind
public deftype Z3_OP_STRING_LE <: Z3_decl_kind
public deftype Z3_OP_RE_PLUS <: Z3_decl_kind
public deftype Z3_OP_RE_STAR <: Z3_decl_kind
public deftype Z3_OP_RE_OPTION <: Z3_decl_kind
public deftype Z3_OP_RE_CONCAT <: Z3_decl_kind
public deftype Z3_OP_RE_UNION <: Z3_decl_kind
public deftype Z3_OP_RE_RANGE <: Z3_decl_kind
public deftype Z3_OP_RE_DIFF <: Z3_decl_kind
public deftype Z3_OP_RE_INTERSECT <: Z3_decl_kind
public deftype Z3_OP_RE_LOOP <: Z3_decl_kind
public deftype Z3_OP_RE_POWER <: Z3_decl_kind
public deftype Z3_OP_RE_COMPLEMENT <: Z3_decl_kind
public deftype Z3_OP_RE_EMPTY_SET <: Z3_decl_kind
public deftype Z3_OP_RE_FULL_SET <: Z3_decl_kind
public deftype Z3_OP_RE_FULL_CHAR_SET <: Z3_decl_kind
public deftype Z3_OP_RE_OF_PRED <: Z3_decl_kind
public deftype Z3_OP_RE_REVERSE <: Z3_decl_kind
public deftype Z3_OP_RE_DERIVATIVE <: Z3_decl_kind
public deftype Z3_OP_CHAR_CONST <: Z3_decl_kind
public deftype Z3_OP_CHAR_LE <: Z3_decl_kind
public deftype Z3_OP_CHAR_TO_INT <: Z3_decl_kind
public deftype Z3_OP_CHAR_TO_BV <: Z3_decl_kind
public deftype Z3_OP_CHAR_FROM_BV <: Z3_decl_kind
public deftype Z3_OP_CHAR_IS_DIGIT <: Z3_decl_kind
public deftype Z3_OP_LABEL <: Z3_decl_kind
public deftype Z3_OP_LABEL_LIT <: Z3_decl_kind
public deftype Z3_OP_DT_CONSTRUCTOR <: Z3_decl_kind
public deftype Z3_OP_DT_RECOGNISER <: Z3_decl_kind
public deftype Z3_OP_DT_IS <: Z3_decl_kind
public deftype Z3_OP_DT_ACCESSOR <: Z3_decl_kind
public deftype Z3_OP_DT_UPDATE_FIELD <: Z3_decl_kind
public deftype Z3_OP_PB_AT_MOST <: Z3_decl_kind
public deftype Z3_OP_PB_AT_LEAST <: Z3_decl_kind
public deftype Z3_OP_PB_LE <: Z3_decl_kind
public deftype Z3_OP_PB_GE <: Z3_decl_kind
public deftype Z3_OP_PB_EQ <: Z3_decl_kind
public deftype Z3_OP_SPECIAL_RELATION_LO <: Z3_decl_kind
public deftype Z3_OP_SPECIAL_RELATION_PO <: Z3_decl_kind
public deftype Z3_OP_SPECIAL_RELATION_PLO <: Z3_decl_kind
public deftype Z3_OP_SPECIAL_RELATION_TO <: Z3_decl_kind
public deftype Z3_OP_SPECIAL_RELATION_TC <: Z3_decl_kind
public deftype Z3_OP_SPECIAL_RELATION_TRC <: Z3_decl_kind
public deftype Z3_OP_FPA_RM_NEAREST_TIES_TO_EVEN <: Z3_decl_kind
public deftype Z3_OP_FPA_RM_NEAREST_TIES_TO_AWAY <: Z3_decl_kind
public deftype Z3_OP_FPA_RM_TOWARD_POSITIVE <: Z3_decl_kind
public deftype Z3_OP_FPA_RM_TOWARD_NEGATIVE <: Z3_decl_kind
public deftype Z3_OP_FPA_RM_TOWARD_ZERO <: Z3_decl_kind
public deftype Z3_OP_FPA_NUM <: Z3_decl_kind
public deftype Z3_OP_FPA_PLUS_INF <: Z3_decl_kind
public deftype Z3_OP_FPA_MINUS_INF <: Z3_decl_kind
public deftype Z3_OP_FPA_NAN <: Z3_decl_kind
public deftype Z3_OP_FPA_PLUS_ZERO <: Z3_decl_kind
public deftype Z3_OP_FPA_MINUS_ZERO <: Z3_decl_kind
public deftype Z3_OP_FPA_ADD <: Z3_decl_kind
public deftype Z3_OP_FPA_SUB <: Z3_decl_kind
public deftype Z3_OP_FPA_NEG <: Z3_decl_kind
public deftype Z3_OP_FPA_MUL <: Z3_decl_kind
public deftype Z3_OP_FPA_DIV <: Z3_decl_kind
public deftype Z3_OP_FPA_REM <: Z3_decl_kind
public deftype Z3_OP_FPA_ABS <: Z3_decl_kind
public deftype Z3_OP_FPA_MIN <: Z3_decl_kind
public deftype Z3_OP_FPA_MAX <: Z3_decl_kind
public deftype Z3_OP_FPA_FMA <: Z3_decl_kind
public deftype Z3_OP_FPA_SQRT <: Z3_decl_kind
public deftype Z3_OP_FPA_ROUND_TO_INTEGRAL <: Z3_decl_kind
public deftype Z3_OP_FPA_EQ <: Z3_decl_kind
public deftype Z3_OP_FPA_LT <: Z3_decl_kind
public deftype Z3_OP_FPA_GT <: Z3_decl_kind
public deftype Z3_OP_FPA_LE <: Z3_decl_kind
public deftype Z3_OP_FPA_GE <: Z3_decl_kind
public deftype Z3_OP_FPA_IS_NAN <: Z3_decl_kind
public deftype Z3_OP_FPA_IS_INF <: Z3_decl_kind
public deftype Z3_OP_FPA_IS_ZERO <: Z3_decl_kind
public deftype Z3_OP_FPA_IS_NORMAL <: Z3_decl_kind
public deftype Z3_OP_FPA_IS_SUBNORMAL <: Z3_decl_kind
public deftype Z3_OP_FPA_IS_NEGATIVE <: Z3_decl_kind
public deftype Z3_OP_FPA_IS_POSITIVE <: Z3_decl_kind
public deftype Z3_OP_FPA_FP <: Z3_decl_kind
public deftype Z3_OP_FPA_TO_FP <: Z3_decl_kind
public deftype Z3_OP_FPA_TO_FP_UNSIGNED <: Z3_decl_kind
public deftype Z3_OP_FPA_TO_UBV <: Z3_decl_kind
public deftype Z3_OP_FPA_TO_SBV <: Z3_decl_kind
public deftype Z3_OP_FPA_TO_REAL <: Z3_decl_kind
public deftype Z3_OP_FPA_TO_IEEE_BV <: Z3_decl_kind
public deftype Z3_OP_FPA_BVWRAP <: Z3_decl_kind
public deftype Z3_OP_FPA_BV2RM <: Z3_decl_kind
public deftype Z3_OP_INTERNAL <: Z3_decl_kind
public deftype Z3_OP_RECURSIVE <: Z3_decl_kind
public deftype Z3_OP_UNINTERPRETED <: Z3_decl_kind

public defn to-int (v:Z3_decl_kind) -> Int:
  match(v) :
    (x:Z3_OP_TRUE) : 256
    (x:Z3_OP_FALSE) : 257
    (x:Z3_OP_EQ) : 258
    (x:Z3_OP_DISTINCT) : 259
    (x:Z3_OP_ITE) : 260
    (x:Z3_OP_AND) : 261
    (x:Z3_OP_OR) : 262
    (x:Z3_OP_IFF) : 263
    (x:Z3_OP_XOR) : 264
    (x:Z3_OP_NOT) : 265
    (x:Z3_OP_IMPLIES) : 266
    (x:Z3_OP_OEQ) : 267
    (x:Z3_OP_ANUM) : 512
    (x:Z3_OP_AGNUM) : 513
    (x:Z3_OP_LE) : 514
    (x:Z3_OP_GE) : 515
    (x:Z3_OP_LT) : 516
    (x:Z3_OP_GT) : 517
    (x:Z3_OP_ADD) : 518
    (x:Z3_OP_SUB) : 519
    (x:Z3_OP_UMINUS) : 520
    (x:Z3_OP_MUL) : 521
    (x:Z3_OP_DIV) : 522
    (x:Z3_OP_IDIV) : 523
    (x:Z3_OP_REM) : 524
    (x:Z3_OP_MOD) : 525
    (x:Z3_OP_TO_REAL) : 526
    (x:Z3_OP_TO_INT) : 527
    (x:Z3_OP_IS_INT) : 528
    (x:Z3_OP_POWER) : 529
    (x:Z3_OP_STORE) : 768
    (x:Z3_OP_SELECT) : 769
    (x:Z3_OP_CONST_ARRAY) : 770
    (x:Z3_OP_ARRAY_MAP) : 771
    (x:Z3_OP_ARRAY_DEFAULT) : 772
    (x:Z3_OP_SET_UNION) : 773
    (x:Z3_OP_SET_INTERSECT) : 774
    (x:Z3_OP_SET_DIFFERENCE) : 775
    (x:Z3_OP_SET_COMPLEMENT) : 776
    (x:Z3_OP_SET_SUBSET) : 777
    (x:Z3_OP_AS_ARRAY) : 778
    (x:Z3_OP_ARRAY_EXT) : 779
    (x:Z3_OP_SET_HAS_SIZE) : 780
    (x:Z3_OP_SET_CARD) : 781
    (x:Z3_OP_BNUM) : 1024
    (x:Z3_OP_BIT1) : 1025
    (x:Z3_OP_BIT0) : 1026
    (x:Z3_OP_BNEG) : 1027
    (x:Z3_OP_BADD) : 1028
    (x:Z3_OP_BSUB) : 1029
    (x:Z3_OP_BMUL) : 1030
    (x:Z3_OP_BSDIV) : 1031
    (x:Z3_OP_BUDIV) : 1032
    (x:Z3_OP_BSREM) : 1033
    (x:Z3_OP_BUREM) : 1034
    (x:Z3_OP_BSMOD) : 1035
    (x:Z3_OP_BSDIV0) : 1036
    (x:Z3_OP_BUDIV0) : 1037
    (x:Z3_OP_BSREM0) : 1038
    (x:Z3_OP_BUREM0) : 1039
    (x:Z3_OP_BSMOD0) : 1040
    (x:Z3_OP_ULEQ) : 1041
    (x:Z3_OP_SLEQ) : 1042
    (x:Z3_OP_UGEQ) : 1043
    (x:Z3_OP_SGEQ) : 1044
    (x:Z3_OP_ULT) : 1045
    (x:Z3_OP_SLT) : 1046
    (x:Z3_OP_UGT) : 1047
    (x:Z3_OP_SGT) : 1048
    (x:Z3_OP_BAND) : 1049
    (x:Z3_OP_BOR) : 1050
    (x:Z3_OP_BNOT) : 1051
    (x:Z3_OP_BXOR) : 1052
    (x:Z3_OP_BNAND) : 1053
    (x:Z3_OP_BNOR) : 1054
    (x:Z3_OP_BXNOR) : 1055
    (x:Z3_OP_CONCAT) : 1056
    (x:Z3_OP_SIGN_EXT) : 1057
    (x:Z3_OP_ZERO_EXT) : 1058
    (x:Z3_OP_EXTRACT) : 1059
    (x:Z3_OP_REPEAT) : 1060
    (x:Z3_OP_BREDOR) : 1061
    (x:Z3_OP_BREDAND) : 1062
    (x:Z3_OP_BCOMP) : 1063
    (x:Z3_OP_BSHL) : 1064
    (x:Z3_OP_BLSHR) : 1065
    (x:Z3_OP_BASHR) : 1066
    (x:Z3_OP_ROTATE_LEFT) : 1067
    (x:Z3_OP_ROTATE_RIGHT) : 1068
    (x:Z3_OP_EXT_ROTATE_LEFT) : 1069
    (x:Z3_OP_EXT_ROTATE_RIGHT) : 1070
    (x:Z3_OP_BIT2BOOL) : 1071
    (x:Z3_OP_INT2BV) : 1072
    (x:Z3_OP_BV2INT) : 1073
    (x:Z3_OP_CARRY) : 1074
    (x:Z3_OP_XOR3) : 1075
    (x:Z3_OP_BSMUL_NO_OVFL) : 1076
    (x:Z3_OP_BUMUL_NO_OVFL) : 1077
    (x:Z3_OP_BSMUL_NO_UDFL) : 1078
    (x:Z3_OP_BSDIV_I) : 1079
    (x:Z3_OP_BUDIV_I) : 1080
    (x:Z3_OP_BSREM_I) : 1081
    (x:Z3_OP_BUREM_I) : 1082
    (x:Z3_OP_BSMOD_I) : 1083
    (x:Z3_OP_PR_UNDEF) : 1280
    (x:Z3_OP_PR_TRUE) : 1281
    (x:Z3_OP_PR_ASSERTED) : 1282
    (x:Z3_OP_PR_GOAL) : 1283
    (x:Z3_OP_PR_MODUS_PONENS) : 1284
    (x:Z3_OP_PR_REFLEXIVITY) : 1285
    (x:Z3_OP_PR_SYMMETRY) : 1286
    (x:Z3_OP_PR_TRANSITIVITY) : 1287
    (x:Z3_OP_PR_TRANSITIVITY_STAR) : 1288
    (x:Z3_OP_PR_MONOTONICITY) : 1289
    (x:Z3_OP_PR_QUANT_INTRO) : 1290
    (x:Z3_OP_PR_BIND) : 1291
    (x:Z3_OP_PR_DISTRIBUTIVITY) : 1292
    (x:Z3_OP_PR_AND_ELIM) : 1293
    (x:Z3_OP_PR_NOT_OR_ELIM) : 1294
    (x:Z3_OP_PR_REWRITE) : 1295
    (x:Z3_OP_PR_REWRITE_STAR) : 1296
    (x:Z3_OP_PR_PULL_QUANT) : 1297
    (x:Z3_OP_PR_PUSH_QUANT) : 1298
    (x:Z3_OP_PR_ELIM_UNUSED_VARS) : 1299
    (x:Z3_OP_PR_DER) : 1300
    (x:Z3_OP_PR_QUANT_INST) : 1301
    (x:Z3_OP_PR_HYPOTHESIS) : 1302
    (x:Z3_OP_PR_LEMMA) : 1303
    (x:Z3_OP_PR_UNIT_RESOLUTION) : 1304
    (x:Z3_OP_PR_IFF_TRUE) : 1305
    (x:Z3_OP_PR_IFF_FALSE) : 1306
    (x:Z3_OP_PR_COMMUTATIVITY) : 1307
    (x:Z3_OP_PR_DEF_AXIOM) : 1308
    (x:Z3_OP_PR_ASSUMPTION_ADD) : 1309
    (x:Z3_OP_PR_LEMMA_ADD) : 1310
    (x:Z3_OP_PR_REDUNDANT_DEL) : 1311
    (x:Z3_OP_PR_CLAUSE_TRAIL) : 1312
    (x:Z3_OP_PR_DEF_INTRO) : 1313
    (x:Z3_OP_PR_APPLY_DEF) : 1314
    (x:Z3_OP_PR_IFF_OEQ) : 1315
    (x:Z3_OP_PR_NNF_POS) : 1316
    (x:Z3_OP_PR_NNF_NEG) : 1317
    (x:Z3_OP_PR_SKOLEMIZE) : 1318
    (x:Z3_OP_PR_MODUS_PONENS_OEQ) : 1319
    (x:Z3_OP_PR_TH_LEMMA) : 1320
    (x:Z3_OP_PR_HYPER_RESOLVE) : 1321
    (x:Z3_OP_RA_STORE) : 1536
    (x:Z3_OP_RA_EMPTY) : 1537
    (x:Z3_OP_RA_IS_EMPTY) : 1538
    (x:Z3_OP_RA_JOIN) : 1539
    (x:Z3_OP_RA_UNION) : 1540
    (x:Z3_OP_RA_WIDEN) : 1541
    (x:Z3_OP_RA_PROJECT) : 1542
    (x:Z3_OP_RA_FILTER) : 1543
    (x:Z3_OP_RA_NEGATION_FILTER) : 1544
    (x:Z3_OP_RA_RENAME) : 1545
    (x:Z3_OP_RA_COMPLEMENT) : 1546
    (x:Z3_OP_RA_SELECT) : 1547
    (x:Z3_OP_RA_CLONE) : 1548
    (x:Z3_OP_FD_CONSTANT) : 1549
    (x:Z3_OP_FD_LT) : 1550
    (x:Z3_OP_SEQ_UNIT) : 1551
    (x:Z3_OP_SEQ_EMPTY) : 1552
    (x:Z3_OP_SEQ_CONCAT) : 1553
    (x:Z3_OP_SEQ_PREFIX) : 1554
    (x:Z3_OP_SEQ_SUFFIX) : 1555
    (x:Z3_OP_SEQ_CONTAINS) : 1556
    (x:Z3_OP_SEQ_EXTRACT) : 1557
    (x:Z3_OP_SEQ_REPLACE) : 1558
    (x:Z3_OP_SEQ_REPLACE_RE) : 1559
    (x:Z3_OP_SEQ_REPLACE_RE_ALL) : 1560
    (x:Z3_OP_SEQ_REPLACE_ALL) : 1561
    (x:Z3_OP_SEQ_AT) : 1562
    (x:Z3_OP_SEQ_NTH) : 1563
    (x:Z3_OP_SEQ_LENGTH) : 1564
    (x:Z3_OP_SEQ_INDEX) : 1565
    (x:Z3_OP_SEQ_LAST_INDEX) : 1566
    (x:Z3_OP_SEQ_TO_RE) : 1567
    (x:Z3_OP_SEQ_IN_RE) : 1568
    (x:Z3_OP_STR_TO_INT) : 1569
    (x:Z3_OP_INT_TO_STR) : 1570
    (x:Z3_OP_UBV_TO_STR) : 1571
    (x:Z3_OP_SBV_TO_STR) : 1572
    (x:Z3_OP_STR_TO_CODE) : 1573
    (x:Z3_OP_STR_FROM_CODE) : 1574
    (x:Z3_OP_STRING_LT) : 1575
    (x:Z3_OP_STRING_LE) : 1576
    (x:Z3_OP_RE_PLUS) : 1577
    (x:Z3_OP_RE_STAR) : 1578
    (x:Z3_OP_RE_OPTION) : 1579
    (x:Z3_OP_RE_CONCAT) : 1580
    (x:Z3_OP_RE_UNION) : 1581
    (x:Z3_OP_RE_RANGE) : 1582
    (x:Z3_OP_RE_DIFF) : 1583
    (x:Z3_OP_RE_INTERSECT) : 1584
    (x:Z3_OP_RE_LOOP) : 1585
    (x:Z3_OP_RE_POWER) : 1586
    (x:Z3_OP_RE_COMPLEMENT) : 1587
    (x:Z3_OP_RE_EMPTY_SET) : 1588
    (x:Z3_OP_RE_FULL_SET) : 1589
    (x:Z3_OP_RE_FULL_CHAR_SET) : 1590
    (x:Z3_OP_RE_OF_PRED) : 1591
    (x:Z3_OP_RE_REVERSE) : 1592
    (x:Z3_OP_RE_DERIVATIVE) : 1593
    (x:Z3_OP_CHAR_CONST) : 1594
    (x:Z3_OP_CHAR_LE) : 1595
    (x:Z3_OP_CHAR_TO_INT) : 1596
    (x:Z3_OP_CHAR_TO_BV) : 1597
    (x:Z3_OP_CHAR_FROM_BV) : 1598
    (x:Z3_OP_CHAR_IS_DIGIT) : 1599
    (x:Z3_OP_LABEL) : 1792
    (x:Z3_OP_LABEL_LIT) : 1793
    (x:Z3_OP_DT_CONSTRUCTOR) : 2048
    (x:Z3_OP_DT_RECOGNISER) : 2049
    (x:Z3_OP_DT_IS) : 2050
    (x:Z3_OP_DT_ACCESSOR) : 2051
    (x:Z3_OP_DT_UPDATE_FIELD) : 2052
    (x:Z3_OP_PB_AT_MOST) : 2304
    (x:Z3_OP_PB_AT_LEAST) : 2305
    (x:Z3_OP_PB_LE) : 2306
    (x:Z3_OP_PB_GE) : 2307
    (x:Z3_OP_PB_EQ) : 2308
    (x:Z3_OP_SPECIAL_RELATION_LO) : 40960
    (x:Z3_OP_SPECIAL_RELATION_PO) : 40961
    (x:Z3_OP_SPECIAL_RELATION_PLO) : 40962
    (x:Z3_OP_SPECIAL_RELATION_TO) : 40963
    (x:Z3_OP_SPECIAL_RELATION_TC) : 40964
    (x:Z3_OP_SPECIAL_RELATION_TRC) : 40965
    (x:Z3_OP_FPA_RM_NEAREST_TIES_TO_EVEN) : 45056
    (x:Z3_OP_FPA_RM_NEAREST_TIES_TO_AWAY) : 45057
    (x:Z3_OP_FPA_RM_TOWARD_POSITIVE) : 45058
    (x:Z3_OP_FPA_RM_TOWARD_NEGATIVE) : 45059
    (x:Z3_OP_FPA_RM_TOWARD_ZERO) : 45060
    (x:Z3_OP_FPA_NUM) : 45061
    (x:Z3_OP_FPA_PLUS_INF) : 45062
    (x:Z3_OP_FPA_MINUS_INF) : 45063
    (x:Z3_OP_FPA_NAN) : 45064
    (x:Z3_OP_FPA_PLUS_ZERO) : 45065
    (x:Z3_OP_FPA_MINUS_ZERO) : 45066
    (x:Z3_OP_FPA_ADD) : 45067
    (x:Z3_OP_FPA_SUB) : 45068
    (x:Z3_OP_FPA_NEG) : 45069
    (x:Z3_OP_FPA_MUL) : 45070
    (x:Z3_OP_FPA_DIV) : 45071
    (x:Z3_OP_FPA_REM) : 45072
    (x:Z3_OP_FPA_ABS) : 45073
    (x:Z3_OP_FPA_MIN) : 45074
    (x:Z3_OP_FPA_MAX) : 45075
    (x:Z3_OP_FPA_FMA) : 45076
    (x:Z3_OP_FPA_SQRT) : 45077
    (x:Z3_OP_FPA_ROUND_TO_INTEGRAL) : 45078
    (x:Z3_OP_FPA_EQ) : 45079
    (x:Z3_OP_FPA_LT) : 45080
    (x:Z3_OP_FPA_GT) : 45081
    (x:Z3_OP_FPA_LE) : 45082
    (x:Z3_OP_FPA_GE) : 45083
    (x:Z3_OP_FPA_IS_NAN) : 45084
    (x:Z3_OP_FPA_IS_INF) : 45085
    (x:Z3_OP_FPA_IS_ZERO) : 45086
    (x:Z3_OP_FPA_IS_NORMAL) : 45087
    (x:Z3_OP_FPA_IS_SUBNORMAL) : 45088
    (x:Z3_OP_FPA_IS_NEGATIVE) : 45089
    (x:Z3_OP_FPA_IS_POSITIVE) : 45090
    (x:Z3_OP_FPA_FP) : 45091
    (x:Z3_OP_FPA_TO_FP) : 45092
    (x:Z3_OP_FPA_TO_FP_UNSIGNED) : 45093
    (x:Z3_OP_FPA_TO_UBV) : 45094
    (x:Z3_OP_FPA_TO_SBV) : 45095
    (x:Z3_OP_FPA_TO_REAL) : 45096
    (x:Z3_OP_FPA_TO_IEEE_BV) : 45097
    (x:Z3_OP_FPA_BVWRAP) : 45098
    (x:Z3_OP_FPA_BV2RM) : 45099
    (x:Z3_OP_INTERNAL) : 45100
    (x:Z3_OP_RECURSIVE) : 45101
    (x:Z3_OP_UNINTERPRETED) : 45102

public defn Z3_decl_kind (v:Int) -> Z3_decl_kind :
  switch {v == _}:
    256 : new Z3_OP_TRUE
    257 : new Z3_OP_FALSE
    258 : new Z3_OP_EQ
    259 : new Z3_OP_DISTINCT
    260 : new Z3_OP_ITE
    261 : new Z3_OP_AND
    262 : new Z3_OP_OR
    263 : new Z3_OP_IFF
    264 : new Z3_OP_XOR
    265 : new Z3_OP_NOT
    266 : new Z3_OP_IMPLIES
    267 : new Z3_OP_OEQ
    512 : new Z3_OP_ANUM
    513 : new Z3_OP_AGNUM
    514 : new Z3_OP_LE
    515 : new Z3_OP_GE
    516 : new Z3_OP_LT
    517 : new Z3_OP_GT
    518 : new Z3_OP_ADD
    519 : new Z3_OP_SUB
    520 : new Z3_OP_UMINUS
    521 : new Z3_OP_MUL
    522 : new Z3_OP_DIV
    523 : new Z3_OP_IDIV
    524 : new Z3_OP_REM
    525 : new Z3_OP_MOD
    526 : new Z3_OP_TO_REAL
    527 : new Z3_OP_TO_INT
    528 : new Z3_OP_IS_INT
    529 : new Z3_OP_POWER
    768 : new Z3_OP_STORE
    769 : new Z3_OP_SELECT
    770 : new Z3_OP_CONST_ARRAY
    771 : new Z3_OP_ARRAY_MAP
    772 : new Z3_OP_ARRAY_DEFAULT
    773 : new Z3_OP_SET_UNION
    774 : new Z3_OP_SET_INTERSECT
    775 : new Z3_OP_SET_DIFFERENCE
    776 : new Z3_OP_SET_COMPLEMENT
    777 : new Z3_OP_SET_SUBSET
    778 : new Z3_OP_AS_ARRAY
    779 : new Z3_OP_ARRAY_EXT
    780 : new Z3_OP_SET_HAS_SIZE
    781 : new Z3_OP_SET_CARD
    1024 : new Z3_OP_BNUM
    1025 : new Z3_OP_BIT1
    1026 : new Z3_OP_BIT0
    1027 : new Z3_OP_BNEG
    1028 : new Z3_OP_BADD
    1029 : new Z3_OP_BSUB
    1030 : new Z3_OP_BMUL
    1031 : new Z3_OP_BSDIV
    1032 : new Z3_OP_BUDIV
    1033 : new Z3_OP_BSREM
    1034 : new Z3_OP_BUREM
    1035 : new Z3_OP_BSMOD
    1036 : new Z3_OP_BSDIV0
    1037 : new Z3_OP_BUDIV0
    1038 : new Z3_OP_BSREM0
    1039 : new Z3_OP_BUREM0
    1040 : new Z3_OP_BSMOD0
    1041 : new Z3_OP_ULEQ
    1042 : new Z3_OP_SLEQ
    1043 : new Z3_OP_UGEQ
    1044 : new Z3_OP_SGEQ
    1045 : new Z3_OP_ULT
    1046 : new Z3_OP_SLT
    1047 : new Z3_OP_UGT
    1048 : new Z3_OP_SGT
    1049 : new Z3_OP_BAND
    1050 : new Z3_OP_BOR
    1051 : new Z3_OP_BNOT
    1052 : new Z3_OP_BXOR
    1053 : new Z3_OP_BNAND
    1054 : new Z3_OP_BNOR
    1055 : new Z3_OP_BXNOR
    1056 : new Z3_OP_CONCAT
    1057 : new Z3_OP_SIGN_EXT
    1058 : new Z3_OP_ZERO_EXT
    1059 : new Z3_OP_EXTRACT
    1060 : new Z3_OP_REPEAT
    1061 : new Z3_OP_BREDOR
    1062 : new Z3_OP_BREDAND
    1063 : new Z3_OP_BCOMP
    1064 : new Z3_OP_BSHL
    1065 : new Z3_OP_BLSHR
    1066 : new Z3_OP_BASHR
    1067 : new Z3_OP_ROTATE_LEFT
    1068 : new Z3_OP_ROTATE_RIGHT
    1069 : new Z3_OP_EXT_ROTATE_LEFT
    1070 : new Z3_OP_EXT_ROTATE_RIGHT
    1071 : new Z3_OP_BIT2BOOL
    1072 : new Z3_OP_INT2BV
    1073 : new Z3_OP_BV2INT
    1074 : new Z3_OP_CARRY
    1075 : new Z3_OP_XOR3
    1076 : new Z3_OP_BSMUL_NO_OVFL
    1077 : new Z3_OP_BUMUL_NO_OVFL
    1078 : new Z3_OP_BSMUL_NO_UDFL
    1079 : new Z3_OP_BSDIV_I
    1080 : new Z3_OP_BUDIV_I
    1081 : new Z3_OP_BSREM_I
    1082 : new Z3_OP_BUREM_I
    1083 : new Z3_OP_BSMOD_I
    1280 : new Z3_OP_PR_UNDEF
    1281 : new Z3_OP_PR_TRUE
    1282 : new Z3_OP_PR_ASSERTED
    1283 : new Z3_OP_PR_GOAL
    1284 : new Z3_OP_PR_MODUS_PONENS
    1285 : new Z3_OP_PR_REFLEXIVITY
    1286 : new Z3_OP_PR_SYMMETRY
    1287 : new Z3_OP_PR_TRANSITIVITY
    1288 : new Z3_OP_PR_TRANSITIVITY_STAR
    1289 : new Z3_OP_PR_MONOTONICITY
    1290 : new Z3_OP_PR_QUANT_INTRO
    1291 : new Z3_OP_PR_BIND
    1292 : new Z3_OP_PR_DISTRIBUTIVITY
    1293 : new Z3_OP_PR_AND_ELIM
    1294 : new Z3_OP_PR_NOT_OR_ELIM
    1295 : new Z3_OP_PR_REWRITE
    1296 : new Z3_OP_PR_REWRITE_STAR
    1297 : new Z3_OP_PR_PULL_QUANT
    1298 : new Z3_OP_PR_PUSH_QUANT
    1299 : new Z3_OP_PR_ELIM_UNUSED_VARS
    1300 : new Z3_OP_PR_DER
    1301 : new Z3_OP_PR_QUANT_INST
    1302 : new Z3_OP_PR_HYPOTHESIS
    1303 : new Z3_OP_PR_LEMMA
    1304 : new Z3_OP_PR_UNIT_RESOLUTION
    1305 : new Z3_OP_PR_IFF_TRUE
    1306 : new Z3_OP_PR_IFF_FALSE
    1307 : new Z3_OP_PR_COMMUTATIVITY
    1308 : new Z3_OP_PR_DEF_AXIOM
    1309 : new Z3_OP_PR_ASSUMPTION_ADD
    1310 : new Z3_OP_PR_LEMMA_ADD
    1311 : new Z3_OP_PR_REDUNDANT_DEL
    1312 : new Z3_OP_PR_CLAUSE_TRAIL
    1313 : new Z3_OP_PR_DEF_INTRO
    1314 : new Z3_OP_PR_APPLY_DEF
    1315 : new Z3_OP_PR_IFF_OEQ
    1316 : new Z3_OP_PR_NNF_POS
    1317 : new Z3_OP_PR_NNF_NEG
    1318 : new Z3_OP_PR_SKOLEMIZE
    1319 : new Z3_OP_PR_MODUS_PONENS_OEQ
    1320 : new Z3_OP_PR_TH_LEMMA
    1321 : new Z3_OP_PR_HYPER_RESOLVE
    1536 : new Z3_OP_RA_STORE
    1537 : new Z3_OP_RA_EMPTY
    1538 : new Z3_OP_RA_IS_EMPTY
    1539 : new Z3_OP_RA_JOIN
    1540 : new Z3_OP_RA_UNION
    1541 : new Z3_OP_RA_WIDEN
    1542 : new Z3_OP_RA_PROJECT
    1543 : new Z3_OP_RA_FILTER
    1544 : new Z3_OP_RA_NEGATION_FILTER
    1545 : new Z3_OP_RA_RENAME
    1546 : new Z3_OP_RA_COMPLEMENT
    1547 : new Z3_OP_RA_SELECT
    1548 : new Z3_OP_RA_CLONE
    1549 : new Z3_OP_FD_CONSTANT
    1550 : new Z3_OP_FD_LT
    1551 : new Z3_OP_SEQ_UNIT
    1552 : new Z3_OP_SEQ_EMPTY
    1553 : new Z3_OP_SEQ_CONCAT
    1554 : new Z3_OP_SEQ_PREFIX
    1555 : new Z3_OP_SEQ_SUFFIX
    1556 : new Z3_OP_SEQ_CONTAINS
    1557 : new Z3_OP_SEQ_EXTRACT
    1558 : new Z3_OP_SEQ_REPLACE
    1559 : new Z3_OP_SEQ_REPLACE_RE
    1560 : new Z3_OP_SEQ_REPLACE_RE_ALL
    1561 : new Z3_OP_SEQ_REPLACE_ALL
    1562 : new Z3_OP_SEQ_AT
    1563 : new Z3_OP_SEQ_NTH
    1564 : new Z3_OP_SEQ_LENGTH
    1565 : new Z3_OP_SEQ_INDEX
    1566 : new Z3_OP_SEQ_LAST_INDEX
    1567 : new Z3_OP_SEQ_TO_RE
    1568 : new Z3_OP_SEQ_IN_RE
    1569 : new Z3_OP_STR_TO_INT
    1570 : new Z3_OP_INT_TO_STR
    1571 : new Z3_OP_UBV_TO_STR
    1572 : new Z3_OP_SBV_TO_STR
    1573 : new Z3_OP_STR_TO_CODE
    1574 : new Z3_OP_STR_FROM_CODE
    1575 : new Z3_OP_STRING_LT
    1576 : new Z3_OP_STRING_LE
    1577 : new Z3_OP_RE_PLUS
    1578 : new Z3_OP_RE_STAR
    1579 : new Z3_OP_RE_OPTION
    1580 : new Z3_OP_RE_CONCAT
    1581 : new Z3_OP_RE_UNION
    1582 : new Z3_OP_RE_RANGE
    1583 : new Z3_OP_RE_DIFF
    1584 : new Z3_OP_RE_INTERSECT
    1585 : new Z3_OP_RE_LOOP
    1586 : new Z3_OP_RE_POWER
    1587 : new Z3_OP_RE_COMPLEMENT
    1588 : new Z3_OP_RE_EMPTY_SET
    1589 : new Z3_OP_RE_FULL_SET
    1590 : new Z3_OP_RE_FULL_CHAR_SET
    1591 : new Z3_OP_RE_OF_PRED
    1592 : new Z3_OP_RE_REVERSE
    1593 : new Z3_OP_RE_DERIVATIVE
    1594 : new Z3_OP_CHAR_CONST
    1595 : new Z3_OP_CHAR_LE
    1596 : new Z3_OP_CHAR_TO_INT
    1597 : new Z3_OP_CHAR_TO_BV
    1598 : new Z3_OP_CHAR_FROM_BV
    1599 : new Z3_OP_CHAR_IS_DIGIT
    1792 : new Z3_OP_LABEL
    1793 : new Z3_OP_LABEL_LIT
    2048 : new Z3_OP_DT_CONSTRUCTOR
    2049 : new Z3_OP_DT_RECOGNISER
    2050 : new Z3_OP_DT_IS
    2051 : new Z3_OP_DT_ACCESSOR
    2052 : new Z3_OP_DT_UPDATE_FIELD
    2304 : new Z3_OP_PB_AT_MOST
    2305 : new Z3_OP_PB_AT_LEAST
    2306 : new Z3_OP_PB_LE
    2307 : new Z3_OP_PB_GE
    2308 : new Z3_OP_PB_EQ
    40960 : new Z3_OP_SPECIAL_RELATION_LO
    40961 : new Z3_OP_SPECIAL_RELATION_PO
    40962 : new Z3_OP_SPECIAL_RELATION_PLO
    40963 : new Z3_OP_SPECIAL_RELATION_TO
    40964 : new Z3_OP_SPECIAL_RELATION_TC
    40965 : new Z3_OP_SPECIAL_RELATION_TRC
    45056 : new Z3_OP_FPA_RM_NEAREST_TIES_TO_EVEN
    45057 : new Z3_OP_FPA_RM_NEAREST_TIES_TO_AWAY
    45058 : new Z3_OP_FPA_RM_TOWARD_POSITIVE
    45059 : new Z3_OP_FPA_RM_TOWARD_NEGATIVE
    45060 : new Z3_OP_FPA_RM_TOWARD_ZERO
    45061 : new Z3_OP_FPA_NUM
    45062 : new Z3_OP_FPA_PLUS_INF
    45063 : new Z3_OP_FPA_MINUS_INF
    45064 : new Z3_OP_FPA_NAN
    45065 : new Z3_OP_FPA_PLUS_ZERO
    45066 : new Z3_OP_FPA_MINUS_ZERO
    45067 : new Z3_OP_FPA_ADD
    45068 : new Z3_OP_FPA_SUB
    45069 : new Z3_OP_FPA_NEG
    45070 : new Z3_OP_FPA_MUL
    45071 : new Z3_OP_FPA_DIV
    45072 : new Z3_OP_FPA_REM
    45073 : new Z3_OP_FPA_ABS
    45074 : new Z3_OP_FPA_MIN
    45075 : new Z3_OP_FPA_MAX
    45076 : new Z3_OP_FPA_FMA
    45077 : new Z3_OP_FPA_SQRT
    45078 : new Z3_OP_FPA_ROUND_TO_INTEGRAL
    45079 : new Z3_OP_FPA_EQ
    45080 : new Z3_OP_FPA_LT
    45081 : new Z3_OP_FPA_GT
    45082 : new Z3_OP_FPA_LE
    45083 : new Z3_OP_FPA_GE
    45084 : new Z3_OP_FPA_IS_NAN
    45085 : new Z3_OP_FPA_IS_INF
    45086 : new Z3_OP_FPA_IS_ZERO
    45087 : new Z3_OP_FPA_IS_NORMAL
    45088 : new Z3_OP_FPA_IS_SUBNORMAL
    45089 : new Z3_OP_FPA_IS_NEGATIVE
    45090 : new Z3_OP_FPA_IS_POSITIVE
    45091 : new Z3_OP_FPA_FP
    45092 : new Z3_OP_FPA_TO_FP
    45093 : new Z3_OP_FPA_TO_FP_UNSIGNED
    45094 : new Z3_OP_FPA_TO_UBV
    45095 : new Z3_OP_FPA_TO_SBV
    45096 : new Z3_OP_FPA_TO_REAL
    45097 : new Z3_OP_FPA_TO_IEEE_BV
    45098 : new Z3_OP_FPA_BVWRAP
    45099 : new Z3_OP_FPA_BV2RM
    45100 : new Z3_OP_INTERNAL
    45101 : new Z3_OP_RECURSIVE
    45102 : new Z3_OP_UNINTERPRETED
    else: throw(Exception("Z3_decl_kind: Invalid Enum Value: %_" % [v]))

public lostanza defn Z3_decl_kind (v:int) -> ref<Z3_decl_kind> :
  return Z3_decl_kind(new Int{v})

defmethod print (o:OutputStream, v:Z3_decl_kind) :
  match(v) :
    (x:Z3_OP_TRUE) : print(o, "Z3_OP_TRUE")
    (x:Z3_OP_FALSE) : print(o, "Z3_OP_FALSE")
    (x:Z3_OP_EQ) : print(o, "Z3_OP_EQ")
    (x:Z3_OP_DISTINCT) : print(o, "Z3_OP_DISTINCT")
    (x:Z3_OP_ITE) : print(o, "Z3_OP_ITE")
    (x:Z3_OP_AND) : print(o, "Z3_OP_AND")
    (x:Z3_OP_OR) : print(o, "Z3_OP_OR")
    (x:Z3_OP_IFF) : print(o, "Z3_OP_IFF")
    (x:Z3_OP_XOR) : print(o, "Z3_OP_XOR")
    (x:Z3_OP_NOT) : print(o, "Z3_OP_NOT")
    (x:Z3_OP_IMPLIES) : print(o, "Z3_OP_IMPLIES")
    (x:Z3_OP_OEQ) : print(o, "Z3_OP_OEQ")
    (x:Z3_OP_ANUM) : print(o, "Z3_OP_ANUM")
    (x:Z3_OP_AGNUM) : print(o, "Z3_OP_AGNUM")
    (x:Z3_OP_LE) : print(o, "Z3_OP_LE")
    (x:Z3_OP_GE) : print(o, "Z3_OP_GE")
    (x:Z3_OP_LT) : print(o, "Z3_OP_LT")
    (x:Z3_OP_GT) : print(o, "Z3_OP_GT")
    (x:Z3_OP_ADD) : print(o, "Z3_OP_ADD")
    (x:Z3_OP_SUB) : print(o, "Z3_OP_SUB")
    (x:Z3_OP_UMINUS) : print(o, "Z3_OP_UMINUS")
    (x:Z3_OP_MUL) : print(o, "Z3_OP_MUL")
    (x:Z3_OP_DIV) : print(o, "Z3_OP_DIV")
    (x:Z3_OP_IDIV) : print(o, "Z3_OP_IDIV")
    (x:Z3_OP_REM) : print(o, "Z3_OP_REM")
    (x:Z3_OP_MOD) : print(o, "Z3_OP_MOD")
    (x:Z3_OP_TO_REAL) : print(o, "Z3_OP_TO_REAL")
    (x:Z3_OP_TO_INT) : print(o, "Z3_OP_TO_INT")
    (x:Z3_OP_IS_INT) : print(o, "Z3_OP_IS_INT")
    (x:Z3_OP_POWER) : print(o, "Z3_OP_POWER")
    (x:Z3_OP_STORE) : print(o, "Z3_OP_STORE")
    (x:Z3_OP_SELECT) : print(o, "Z3_OP_SELECT")
    (x:Z3_OP_CONST_ARRAY) : print(o, "Z3_OP_CONST_ARRAY")
    (x:Z3_OP_ARRAY_MAP) : print(o, "Z3_OP_ARRAY_MAP")
    (x:Z3_OP_ARRAY_DEFAULT) : print(o, "Z3_OP_ARRAY_DEFAULT")
    (x:Z3_OP_SET_UNION) : print(o, "Z3_OP_SET_UNION")
    (x:Z3_OP_SET_INTERSECT) : print(o, "Z3_OP_SET_INTERSECT")
    (x:Z3_OP_SET_DIFFERENCE) : print(o, "Z3_OP_SET_DIFFERENCE")
    (x:Z3_OP_SET_COMPLEMENT) : print(o, "Z3_OP_SET_COMPLEMENT")
    (x:Z3_OP_SET_SUBSET) : print(o, "Z3_OP_SET_SUBSET")
    (x:Z3_OP_AS_ARRAY) : print(o, "Z3_OP_AS_ARRAY")
    (x:Z3_OP_ARRAY_EXT) : print(o, "Z3_OP_ARRAY_EXT")
    (x:Z3_OP_SET_HAS_SIZE) : print(o, "Z3_OP_SET_HAS_SIZE")
    (x:Z3_OP_SET_CARD) : print(o, "Z3_OP_SET_CARD")
    (x:Z3_OP_BNUM) : print(o, "Z3_OP_BNUM")
    (x:Z3_OP_BIT1) : print(o, "Z3_OP_BIT1")
    (x:Z3_OP_BIT0) : print(o, "Z3_OP_BIT0")
    (x:Z3_OP_BNEG) : print(o, "Z3_OP_BNEG")
    (x:Z3_OP_BADD) : print(o, "Z3_OP_BADD")
    (x:Z3_OP_BSUB) : print(o, "Z3_OP_BSUB")
    (x:Z3_OP_BMUL) : print(o, "Z3_OP_BMUL")
    (x:Z3_OP_BSDIV) : print(o, "Z3_OP_BSDIV")
    (x:Z3_OP_BUDIV) : print(o, "Z3_OP_BUDIV")
    (x:Z3_OP_BSREM) : print(o, "Z3_OP_BSREM")
    (x:Z3_OP_BUREM) : print(o, "Z3_OP_BUREM")
    (x:Z3_OP_BSMOD) : print(o, "Z3_OP_BSMOD")
    (x:Z3_OP_BSDIV0) : print(o, "Z3_OP_BSDIV0")
    (x:Z3_OP_BUDIV0) : print(o, "Z3_OP_BUDIV0")
    (x:Z3_OP_BSREM0) : print(o, "Z3_OP_BSREM0")
    (x:Z3_OP_BUREM0) : print(o, "Z3_OP_BUREM0")
    (x:Z3_OP_BSMOD0) : print(o, "Z3_OP_BSMOD0")
    (x:Z3_OP_ULEQ) : print(o, "Z3_OP_ULEQ")
    (x:Z3_OP_SLEQ) : print(o, "Z3_OP_SLEQ")
    (x:Z3_OP_UGEQ) : print(o, "Z3_OP_UGEQ")
    (x:Z3_OP_SGEQ) : print(o, "Z3_OP_SGEQ")
    (x:Z3_OP_ULT) : print(o, "Z3_OP_ULT")
    (x:Z3_OP_SLT) : print(o, "Z3_OP_SLT")
    (x:Z3_OP_UGT) : print(o, "Z3_OP_UGT")
    (x:Z3_OP_SGT) : print(o, "Z3_OP_SGT")
    (x:Z3_OP_BAND) : print(o, "Z3_OP_BAND")
    (x:Z3_OP_BOR) : print(o, "Z3_OP_BOR")
    (x:Z3_OP_BNOT) : print(o, "Z3_OP_BNOT")
    (x:Z3_OP_BXOR) : print(o, "Z3_OP_BXOR")
    (x:Z3_OP_BNAND) : print(o, "Z3_OP_BNAND")
    (x:Z3_OP_BNOR) : print(o, "Z3_OP_BNOR")
    (x:Z3_OP_BXNOR) : print(o, "Z3_OP_BXNOR")
    (x:Z3_OP_CONCAT) : print(o, "Z3_OP_CONCAT")
    (x:Z3_OP_SIGN_EXT) : print(o, "Z3_OP_SIGN_EXT")
    (x:Z3_OP_ZERO_EXT) : print(o, "Z3_OP_ZERO_EXT")
    (x:Z3_OP_EXTRACT) : print(o, "Z3_OP_EXTRACT")
    (x:Z3_OP_REPEAT) : print(o, "Z3_OP_REPEAT")
    (x:Z3_OP_BREDOR) : print(o, "Z3_OP_BREDOR")
    (x:Z3_OP_BREDAND) : print(o, "Z3_OP_BREDAND")
    (x:Z3_OP_BCOMP) : print(o, "Z3_OP_BCOMP")
    (x:Z3_OP_BSHL) : print(o, "Z3_OP_BSHL")
    (x:Z3_OP_BLSHR) : print(o, "Z3_OP_BLSHR")
    (x:Z3_OP_BASHR) : print(o, "Z3_OP_BASHR")
    (x:Z3_OP_ROTATE_LEFT) : print(o, "Z3_OP_ROTATE_LEFT")
    (x:Z3_OP_ROTATE_RIGHT) : print(o, "Z3_OP_ROTATE_RIGHT")
    (x:Z3_OP_EXT_ROTATE_LEFT) : print(o, "Z3_OP_EXT_ROTATE_LEFT")
    (x:Z3_OP_EXT_ROTATE_RIGHT) : print(o, "Z3_OP_EXT_ROTATE_RIGHT")
    (x:Z3_OP_BIT2BOOL) : print(o, "Z3_OP_BIT2BOOL")
    (x:Z3_OP_INT2BV) : print(o, "Z3_OP_INT2BV")
    (x:Z3_OP_BV2INT) : print(o, "Z3_OP_BV2INT")
    (x:Z3_OP_CARRY) : print(o, "Z3_OP_CARRY")
    (x:Z3_OP_XOR3) : print(o, "Z3_OP_XOR3")
    (x:Z3_OP_BSMUL_NO_OVFL) : print(o, "Z3_OP_BSMUL_NO_OVFL")
    (x:Z3_OP_BUMUL_NO_OVFL) : print(o, "Z3_OP_BUMUL_NO_OVFL")
    (x:Z3_OP_BSMUL_NO_UDFL) : print(o, "Z3_OP_BSMUL_NO_UDFL")
    (x:Z3_OP_BSDIV_I) : print(o, "Z3_OP_BSDIV_I")
    (x:Z3_OP_BUDIV_I) : print(o, "Z3_OP_BUDIV_I")
    (x:Z3_OP_BSREM_I) : print(o, "Z3_OP_BSREM_I")
    (x:Z3_OP_BUREM_I) : print(o, "Z3_OP_BUREM_I")
    (x:Z3_OP_BSMOD_I) : print(o, "Z3_OP_BSMOD_I")
    (x:Z3_OP_PR_UNDEF) : print(o, "Z3_OP_PR_UNDEF")
    (x:Z3_OP_PR_TRUE) : print(o, "Z3_OP_PR_TRUE")
    (x:Z3_OP_PR_ASSERTED) : print(o, "Z3_OP_PR_ASSERTED")
    (x:Z3_OP_PR_GOAL) : print(o, "Z3_OP_PR_GOAL")
    (x:Z3_OP_PR_MODUS_PONENS) : print(o, "Z3_OP_PR_MODUS_PONENS")
    (x:Z3_OP_PR_REFLEXIVITY) : print(o, "Z3_OP_PR_REFLEXIVITY")
    (x:Z3_OP_PR_SYMMETRY) : print(o, "Z3_OP_PR_SYMMETRY")
    (x:Z3_OP_PR_TRANSITIVITY) : print(o, "Z3_OP_PR_TRANSITIVITY")
    (x:Z3_OP_PR_TRANSITIVITY_STAR) : print(o, "Z3_OP_PR_TRANSITIVITY_STAR")
    (x:Z3_OP_PR_MONOTONICITY) : print(o, "Z3_OP_PR_MONOTONICITY")
    (x:Z3_OP_PR_QUANT_INTRO) : print(o, "Z3_OP_PR_QUANT_INTRO")
    (x:Z3_OP_PR_BIND) : print(o, "Z3_OP_PR_BIND")
    (x:Z3_OP_PR_DISTRIBUTIVITY) : print(o, "Z3_OP_PR_DISTRIBUTIVITY")
    (x:Z3_OP_PR_AND_ELIM) : print(o, "Z3_OP_PR_AND_ELIM")
    (x:Z3_OP_PR_NOT_OR_ELIM) : print(o, "Z3_OP_PR_NOT_OR_ELIM")
    (x:Z3_OP_PR_REWRITE) : print(o, "Z3_OP_PR_REWRITE")
    (x:Z3_OP_PR_REWRITE_STAR) : print(o, "Z3_OP_PR_REWRITE_STAR")
    (x:Z3_OP_PR_PULL_QUANT) : print(o, "Z3_OP_PR_PULL_QUANT")
    (x:Z3_OP_PR_PUSH_QUANT) : print(o, "Z3_OP_PR_PUSH_QUANT")
    (x:Z3_OP_PR_ELIM_UNUSED_VARS) : print(o, "Z3_OP_PR_ELIM_UNUSED_VARS")
    (x:Z3_OP_PR_DER) : print(o, "Z3_OP_PR_DER")
    (x:Z3_OP_PR_QUANT_INST) : print(o, "Z3_OP_PR_QUANT_INST")
    (x:Z3_OP_PR_HYPOTHESIS) : print(o, "Z3_OP_PR_HYPOTHESIS")
    (x:Z3_OP_PR_LEMMA) : print(o, "Z3_OP_PR_LEMMA")
    (x:Z3_OP_PR_UNIT_RESOLUTION) : print(o, "Z3_OP_PR_UNIT_RESOLUTION")
    (x:Z3_OP_PR_IFF_TRUE) : print(o, "Z3_OP_PR_IFF_TRUE")
    (x:Z3_OP_PR_IFF_FALSE) : print(o, "Z3_OP_PR_IFF_FALSE")
    (x:Z3_OP_PR_COMMUTATIVITY) : print(o, "Z3_OP_PR_COMMUTATIVITY")
    (x:Z3_OP_PR_DEF_AXIOM) : print(o, "Z3_OP_PR_DEF_AXIOM")
    (x:Z3_OP_PR_ASSUMPTION_ADD) : print(o, "Z3_OP_PR_ASSUMPTION_ADD")
    (x:Z3_OP_PR_LEMMA_ADD) : print(o, "Z3_OP_PR_LEMMA_ADD")
    (x:Z3_OP_PR_REDUNDANT_DEL) : print(o, "Z3_OP_PR_REDUNDANT_DEL")
    (x:Z3_OP_PR_CLAUSE_TRAIL) : print(o, "Z3_OP_PR_CLAUSE_TRAIL")
    (x:Z3_OP_PR_DEF_INTRO) : print(o, "Z3_OP_PR_DEF_INTRO")
    (x:Z3_OP_PR_APPLY_DEF) : print(o, "Z3_OP_PR_APPLY_DEF")
    (x:Z3_OP_PR_IFF_OEQ) : print(o, "Z3_OP_PR_IFF_OEQ")
    (x:Z3_OP_PR_NNF_POS) : print(o, "Z3_OP_PR_NNF_POS")
    (x:Z3_OP_PR_NNF_NEG) : print(o, "Z3_OP_PR_NNF_NEG")
    (x:Z3_OP_PR_SKOLEMIZE) : print(o, "Z3_OP_PR_SKOLEMIZE")
    (x:Z3_OP_PR_MODUS_PONENS_OEQ) : print(o, "Z3_OP_PR_MODUS_PONENS_OEQ")
    (x:Z3_OP_PR_TH_LEMMA) : print(o, "Z3_OP_PR_TH_LEMMA")
    (x:Z3_OP_PR_HYPER_RESOLVE) : print(o, "Z3_OP_PR_HYPER_RESOLVE")
    (x:Z3_OP_RA_STORE) : print(o, "Z3_OP_RA_STORE")
    (x:Z3_OP_RA_EMPTY) : print(o, "Z3_OP_RA_EMPTY")
    (x:Z3_OP_RA_IS_EMPTY) : print(o, "Z3_OP_RA_IS_EMPTY")
    (x:Z3_OP_RA_JOIN) : print(o, "Z3_OP_RA_JOIN")
    (x:Z3_OP_RA_UNION) : print(o, "Z3_OP_RA_UNION")
    (x:Z3_OP_RA_WIDEN) : print(o, "Z3_OP_RA_WIDEN")
    (x:Z3_OP_RA_PROJECT) : print(o, "Z3_OP_RA_PROJECT")
    (x:Z3_OP_RA_FILTER) : print(o, "Z3_OP_RA_FILTER")
    (x:Z3_OP_RA_NEGATION_FILTER) : print(o, "Z3_OP_RA_NEGATION_FILTER")
    (x:Z3_OP_RA_RENAME) : print(o, "Z3_OP_RA_RENAME")
    (x:Z3_OP_RA_COMPLEMENT) : print(o, "Z3_OP_RA_COMPLEMENT")
    (x:Z3_OP_RA_SELECT) : print(o, "Z3_OP_RA_SELECT")
    (x:Z3_OP_RA_CLONE) : print(o, "Z3_OP_RA_CLONE")
    (x:Z3_OP_FD_CONSTANT) : print(o, "Z3_OP_FD_CONSTANT")
    (x:Z3_OP_FD_LT) : print(o, "Z3_OP_FD_LT")
    (x:Z3_OP_SEQ_UNIT) : print(o, "Z3_OP_SEQ_UNIT")
    (x:Z3_OP_SEQ_EMPTY) : print(o, "Z3_OP_SEQ_EMPTY")
    (x:Z3_OP_SEQ_CONCAT) : print(o, "Z3_OP_SEQ_CONCAT")
    (x:Z3_OP_SEQ_PREFIX) : print(o, "Z3_OP_SEQ_PREFIX")
    (x:Z3_OP_SEQ_SUFFIX) : print(o, "Z3_OP_SEQ_SUFFIX")
    (x:Z3_OP_SEQ_CONTAINS) : print(o, "Z3_OP_SEQ_CONTAINS")
    (x:Z3_OP_SEQ_EXTRACT) : print(o, "Z3_OP_SEQ_EXTRACT")
    (x:Z3_OP_SEQ_REPLACE) : print(o, "Z3_OP_SEQ_REPLACE")
    (x:Z3_OP_SEQ_REPLACE_RE) : print(o, "Z3_OP_SEQ_REPLACE_RE")
    (x:Z3_OP_SEQ_REPLACE_RE_ALL) : print(o, "Z3_OP_SEQ_REPLACE_RE_ALL")
    (x:Z3_OP_SEQ_REPLACE_ALL) : print(o, "Z3_OP_SEQ_REPLACE_ALL")
    (x:Z3_OP_SEQ_AT) : print(o, "Z3_OP_SEQ_AT")
    (x:Z3_OP_SEQ_NTH) : print(o, "Z3_OP_SEQ_NTH")
    (x:Z3_OP_SEQ_LENGTH) : print(o, "Z3_OP_SEQ_LENGTH")
    (x:Z3_OP_SEQ_INDEX) : print(o, "Z3_OP_SEQ_INDEX")
    (x:Z3_OP_SEQ_LAST_INDEX) : print(o, "Z3_OP_SEQ_LAST_INDEX")
    (x:Z3_OP_SEQ_TO_RE) : print(o, "Z3_OP_SEQ_TO_RE")
    (x:Z3_OP_SEQ_IN_RE) : print(o, "Z3_OP_SEQ_IN_RE")
    (x:Z3_OP_STR_TO_INT) : print(o, "Z3_OP_STR_TO_INT")
    (x:Z3_OP_INT_TO_STR) : print(o, "Z3_OP_INT_TO_STR")
    (x:Z3_OP_UBV_TO_STR) : print(o, "Z3_OP_UBV_TO_STR")
    (x:Z3_OP_SBV_TO_STR) : print(o, "Z3_OP_SBV_TO_STR")
    (x:Z3_OP_STR_TO_CODE) : print(o, "Z3_OP_STR_TO_CODE")
    (x:Z3_OP_STR_FROM_CODE) : print(o, "Z3_OP_STR_FROM_CODE")
    (x:Z3_OP_STRING_LT) : print(o, "Z3_OP_STRING_LT")
    (x:Z3_OP_STRING_LE) : print(o, "Z3_OP_STRING_LE")
    (x:Z3_OP_RE_PLUS) : print(o, "Z3_OP_RE_PLUS")
    (x:Z3_OP_RE_STAR) : print(o, "Z3_OP_RE_STAR")
    (x:Z3_OP_RE_OPTION) : print(o, "Z3_OP_RE_OPTION")
    (x:Z3_OP_RE_CONCAT) : print(o, "Z3_OP_RE_CONCAT")
    (x:Z3_OP_RE_UNION) : print(o, "Z3_OP_RE_UNION")
    (x:Z3_OP_RE_RANGE) : print(o, "Z3_OP_RE_RANGE")
    (x:Z3_OP_RE_DIFF) : print(o, "Z3_OP_RE_DIFF")
    (x:Z3_OP_RE_INTERSECT) : print(o, "Z3_OP_RE_INTERSECT")
    (x:Z3_OP_RE_LOOP) : print(o, "Z3_OP_RE_LOOP")
    (x:Z3_OP_RE_POWER) : print(o, "Z3_OP_RE_POWER")
    (x:Z3_OP_RE_COMPLEMENT) : print(o, "Z3_OP_RE_COMPLEMENT")
    (x:Z3_OP_RE_EMPTY_SET) : print(o, "Z3_OP_RE_EMPTY_SET")
    (x:Z3_OP_RE_FULL_SET) : print(o, "Z3_OP_RE_FULL_SET")
    (x:Z3_OP_RE_FULL_CHAR_SET) : print(o, "Z3_OP_RE_FULL_CHAR_SET")
    (x:Z3_OP_RE_OF_PRED) : print(o, "Z3_OP_RE_OF_PRED")
    (x:Z3_OP_RE_REVERSE) : print(o, "Z3_OP_RE_REVERSE")
    (x:Z3_OP_RE_DERIVATIVE) : print(o, "Z3_OP_RE_DERIVATIVE")
    (x:Z3_OP_CHAR_CONST) : print(o, "Z3_OP_CHAR_CONST")
    (x:Z3_OP_CHAR_LE) : print(o, "Z3_OP_CHAR_LE")
    (x:Z3_OP_CHAR_TO_INT) : print(o, "Z3_OP_CHAR_TO_INT")
    (x:Z3_OP_CHAR_TO_BV) : print(o, "Z3_OP_CHAR_TO_BV")
    (x:Z3_OP_CHAR_FROM_BV) : print(o, "Z3_OP_CHAR_FROM_BV")
    (x:Z3_OP_CHAR_IS_DIGIT) : print(o, "Z3_OP_CHAR_IS_DIGIT")
    (x:Z3_OP_LABEL) : print(o, "Z3_OP_LABEL")
    (x:Z3_OP_LABEL_LIT) : print(o, "Z3_OP_LABEL_LIT")
    (x:Z3_OP_DT_CONSTRUCTOR) : print(o, "Z3_OP_DT_CONSTRUCTOR")
    (x:Z3_OP_DT_RECOGNISER) : print(o, "Z3_OP_DT_RECOGNISER")
    (x:Z3_OP_DT_IS) : print(o, "Z3_OP_DT_IS")
    (x:Z3_OP_DT_ACCESSOR) : print(o, "Z3_OP_DT_ACCESSOR")
    (x:Z3_OP_DT_UPDATE_FIELD) : print(o, "Z3_OP_DT_UPDATE_FIELD")
    (x:Z3_OP_PB_AT_MOST) : print(o, "Z3_OP_PB_AT_MOST")
    (x:Z3_OP_PB_AT_LEAST) : print(o, "Z3_OP_PB_AT_LEAST")
    (x:Z3_OP_PB_LE) : print(o, "Z3_OP_PB_LE")
    (x:Z3_OP_PB_GE) : print(o, "Z3_OP_PB_GE")
    (x:Z3_OP_PB_EQ) : print(o, "Z3_OP_PB_EQ")
    (x:Z3_OP_SPECIAL_RELATION_LO) : print(o, "Z3_OP_SPECIAL_RELATION_LO")
    (x:Z3_OP_SPECIAL_RELATION_PO) : print(o, "Z3_OP_SPECIAL_RELATION_PO")
    (x:Z3_OP_SPECIAL_RELATION_PLO) : print(o, "Z3_OP_SPECIAL_RELATION_PLO")
    (x:Z3_OP_SPECIAL_RELATION_TO) : print(o, "Z3_OP_SPECIAL_RELATION_TO")
    (x:Z3_OP_SPECIAL_RELATION_TC) : print(o, "Z3_OP_SPECIAL_RELATION_TC")
    (x:Z3_OP_SPECIAL_RELATION_TRC) : print(o, "Z3_OP_SPECIAL_RELATION_TRC")
    (x:Z3_OP_FPA_RM_NEAREST_TIES_TO_EVEN) : print(o, "Z3_OP_FPA_RM_NEAREST_TIES_TO_EVEN")
    (x:Z3_OP_FPA_RM_NEAREST_TIES_TO_AWAY) : print(o, "Z3_OP_FPA_RM_NEAREST_TIES_TO_AWAY")
    (x:Z3_OP_FPA_RM_TOWARD_POSITIVE) : print(o, "Z3_OP_FPA_RM_TOWARD_POSITIVE")
    (x:Z3_OP_FPA_RM_TOWARD_NEGATIVE) : print(o, "Z3_OP_FPA_RM_TOWARD_NEGATIVE")
    (x:Z3_OP_FPA_RM_TOWARD_ZERO) : print(o, "Z3_OP_FPA_RM_TOWARD_ZERO")
    (x:Z3_OP_FPA_NUM) : print(o, "Z3_OP_FPA_NUM")
    (x:Z3_OP_FPA_PLUS_INF) : print(o, "Z3_OP_FPA_PLUS_INF")
    (x:Z3_OP_FPA_MINUS_INF) : print(o, "Z3_OP_FPA_MINUS_INF")
    (x:Z3_OP_FPA_NAN) : print(o, "Z3_OP_FPA_NAN")
    (x:Z3_OP_FPA_PLUS_ZERO) : print(o, "Z3_OP_FPA_PLUS_ZERO")
    (x:Z3_OP_FPA_MINUS_ZERO) : print(o, "Z3_OP_FPA_MINUS_ZERO")
    (x:Z3_OP_FPA_ADD) : print(o, "Z3_OP_FPA_ADD")
    (x:Z3_OP_FPA_SUB) : print(o, "Z3_OP_FPA_SUB")
    (x:Z3_OP_FPA_NEG) : print(o, "Z3_OP_FPA_NEG")
    (x:Z3_OP_FPA_MUL) : print(o, "Z3_OP_FPA_MUL")
    (x:Z3_OP_FPA_DIV) : print(o, "Z3_OP_FPA_DIV")
    (x:Z3_OP_FPA_REM) : print(o, "Z3_OP_FPA_REM")
    (x:Z3_OP_FPA_ABS) : print(o, "Z3_OP_FPA_ABS")
    (x:Z3_OP_FPA_MIN) : print(o, "Z3_OP_FPA_MIN")
    (x:Z3_OP_FPA_MAX) : print(o, "Z3_OP_FPA_MAX")
    (x:Z3_OP_FPA_FMA) : print(o, "Z3_OP_FPA_FMA")
    (x:Z3_OP_FPA_SQRT) : print(o, "Z3_OP_FPA_SQRT")
    (x:Z3_OP_FPA_ROUND_TO_INTEGRAL) : print(o, "Z3_OP_FPA_ROUND_TO_INTEGRAL")
    (x:Z3_OP_FPA_EQ) : print(o, "Z3_OP_FPA_EQ")
    (x:Z3_OP_FPA_LT) : print(o, "Z3_OP_FPA_LT")
    (x:Z3_OP_FPA_GT) : print(o, "Z3_OP_FPA_GT")
    (x:Z3_OP_FPA_LE) : print(o, "Z3_OP_FPA_LE")
    (x:Z3_OP_FPA_GE) : print(o, "Z3_OP_FPA_GE")
    (x:Z3_OP_FPA_IS_NAN) : print(o, "Z3_OP_FPA_IS_NAN")
    (x:Z3_OP_FPA_IS_INF) : print(o, "Z3_OP_FPA_IS_INF")
    (x:Z3_OP_FPA_IS_ZERO) : print(o, "Z3_OP_FPA_IS_ZERO")
    (x:Z3_OP_FPA_IS_NORMAL) : print(o, "Z3_OP_FPA_IS_NORMAL")
    (x:Z3_OP_FPA_IS_SUBNORMAL) : print(o, "Z3_OP_FPA_IS_SUBNORMAL")
    (x:Z3_OP_FPA_IS_NEGATIVE) : print(o, "Z3_OP_FPA_IS_NEGATIVE")
    (x:Z3_OP_FPA_IS_POSITIVE) : print(o, "Z3_OP_FPA_IS_POSITIVE")
    (x:Z3_OP_FPA_FP) : print(o, "Z3_OP_FPA_FP")
    (x:Z3_OP_FPA_TO_FP) : print(o, "Z3_OP_FPA_TO_FP")
    (x:Z3_OP_FPA_TO_FP_UNSIGNED) : print(o, "Z3_OP_FPA_TO_FP_UNSIGNED")
    (x:Z3_OP_FPA_TO_UBV) : print(o, "Z3_OP_FPA_TO_UBV")
    (x:Z3_OP_FPA_TO_SBV) : print(o, "Z3_OP_FPA_TO_SBV")
    (x:Z3_OP_FPA_TO_REAL) : print(o, "Z3_OP_FPA_TO_REAL")
    (x:Z3_OP_FPA_TO_IEEE_BV) : print(o, "Z3_OP_FPA_TO_IEEE_BV")
    (x:Z3_OP_FPA_BVWRAP) : print(o, "Z3_OP_FPA_BVWRAP")
    (x:Z3_OP_FPA_BV2RM) : print(o, "Z3_OP_FPA_BV2RM")
    (x:Z3_OP_INTERNAL) : print(o, "Z3_OP_INTERNAL")
    (x:Z3_OP_RECURSIVE) : print(o, "Z3_OP_RECURSIVE")
    (x:Z3_OP_UNINTERPRETED) : print(o, "Z3_OP_UNINTERPRETED")

